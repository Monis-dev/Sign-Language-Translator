let video; // access the cam

let handPose;

let connections; //to connects the dots

let hands = []; 

function preload(){
  handPose = ml5.handPose({flipped: true});
}

function gotHands(results){
  hands = results;  
}

function mousePressed(){
  console.log(hands)
}

function setup(){
  createCanvas(650, 480); 
  video = createCapture(VIDEO, {flipped: true});
  video.size(650, 480);
  video.hide();
  
  handPose.detectStart(video, gotHands);
}

function draw(){
  image(video, 0, 0);

//hands
//   for(let i = 0; i < hands.length; i++){
//     let hand = hands[i];
//     for(let i = 0; i < hand.keypoints.length; i++){
//         let keypoint = hand.keypoints[i];
//         fill(255,0,255);
//         noStroke();
//         circle(keypoint.x, keypoint.y, 10);
//     }

//   }
    if (hands.length > 0) {
      let hand = hands[0];
      let index = hand.index_finger_tip;
      let thumb = hand.thumb_ip;
      let pinky = hand.pinky_finger_dip;
      let middle = hand.middle_finger_dip;
      let ring = hand.ring_finger_mcp;
      let wrist = hand.wrist;


      let firstAngle = calculateAngle(
      thumb.x, thumb.y,
      index.x, index.y,
      pinky.x, pinky.y
    );
      let secondAngle = calculateAngle(
      ring.x, ring.y,
      middle.x, middle.y,
      wrist.x, wrist.y
    );
      let total = Math.floor((firstAngle + secondAngle) / 10) ;
      fill(255, 0, 0);
      console.log("Total", total);
      detectHandPose(total);
  // Draw circles
      circle(index.x, index.y, 10);
      circle(thumb.x, thumb.y, 10);
      circle(middle.x, middle.y, 10);
      circle(ring.x, ring.y, 10);
      circle(pinky.x, pinky.y, 10);
      circle(wrist.x, wrist.y, 10);
}
}

function calculateAngle(x1, y1, x2, y2, x3, y3) {
  let v1 = { x: x2 - x1, y: y2 - y1 }; // Vector 1 (from joint 1 to joint 2)
  let v2 = { x: x3 - x2, y: y3 - y2 }; // Vector 2 (from joint 2 to joint 3)

  let dotProduct = v1.x * v2.x + v1.y * v2.y; // Dot product
  let magV1 = Math.sqrt(v1.x ** 2 + v1.y ** 2); // Magnitude of vector 1
  let magV2 = Math.sqrt(v2.x ** 2 + v2.y ** 2); // Magnitude of vector 2

  let angle = Math.acos(dotProduct / (magV1 * magV2)); // Angle in radians
  return angle * (180 / Math.PI); // Convert to degrees
}

//Calculate angle between thumb, index finger, and middle finger
function detectHandPose(a){
  if(a >= 18.9 && a < 22){
    console.log("A");
    
  } else if(a >= 27 && a <= 29.2){
    console.log("B");
  } else if( a >= 31.5 && a <= 33.1){
    console.log("D");
  } else if( a >= 14.3 && a <= 17.2){
    console.log("F");
  } else if( a >= 26.8 && a <= 28.8){
    console.log("G");
  }
  
  
}
